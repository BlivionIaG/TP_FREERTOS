# Makefile by KÃ©vin Le Torc'h

rwildcard=$(wildcard $1$2) $(foreach d,$(wildcard $1*),$(call rwildcard,$d/,$2))
FILTER_OUT=$(foreach v,$(2),$(if $(findstring $(1),$(v)),,$(v)))

EXE_1 = $(notdir $(CURDIR))

ALLSRC := $(call rwildcard,,*.c)
SRC = $(call FILTER_OUT,RVDS,$(ALLSRC))
SRCDIR = $(sort $(dir $(SRC)))

ALLINC := $(call rwildcard,,*.h)
INC = $(call FILTER_OUT,RVDS,$(ALLINC))
INCDIR = $(sort $(dir $(INC)))

NOM = $(basename $(notdir $(SRC)))
OBJ = $(addprefix Output/,$(addsuffix .o, $(NOM)))

ifeq ($(OS),Windows_NT)     					# Windows OS
    detected_OS := Windows
else
    detected_OS := $(shell uname) 				# Unix Based OS
endif

ifeq ($(CC),cc)									# If CC set to "cc"				
	CC = arm-none-eabi-gcc						
endif
ifeq ($(CC),)									# If no c compiler set
	CC = arm-none-eabi-gcc						
endif

INCLUDES = $(addprefix -I,$(subst $(addsuffix /,$(CURDIR)),,$(realpath $(INCDIR))))	# include folders
$(info $(INCLUDES))
CFLAGS = -g -Wall -Wextra -Os -std=gnu11											# Compiler flags
LDFLAGS = 																			# Libs for all systems
ARCH_OPTS = -mlittle-endian -mcpu=cortex-m3 -mthumb --specs=nosys.specs
#ARCH_OPTS = -mlittle-endian -mthumb -mcpu=cortex-m4 -mthumb-interwork \
			--specs=nosys.specs -mfloat-abi=hard -mfpu=fpv4-sp-d16

ifeq ($(detected_OS),Windows)
    LDFLAGS += 
	EXTENSION = .exe
	DELETE_CMD = del
else
    LDFLAGS += 
	EXTENSION =
	DELETE_CMD = rm
endif

all: $(EXE_1)$(EXTENSION)									# Build all executables

rebuild: remake												# Clean and build all executables

remake: clean $(EXE_1)$(EXTENSION) 							# Same as rebuild

$(EXE_1)$(EXTENSION): $(OBJ)
	$(CC) $(CFLAGS) $(ARCH_OPTS) $(OBJ) $(LDFLAGS) -o $@

# Build all the .o files
Output/%.o: %.c
	$(CC) $(CFLAGS) $(ARCH_OPTS) $< -c $(INCLUDES) -o $@

Output/%.o: FreeRTOS-Source/%.c
	$(CC) $(CFLAGS) $(ARCH_OPTS) $< -c $(INCLUDES) -o $@

Output/%.o: FreeRTOS-Source/portable/MemMang/%.c
	$(CC) $(CFLAGS) $(ARCH_OPTS) $< -c $(INCLUDES) -o $@

Output/%.o: FreeRTOS-Source/portable/GCC/ARM_CM3/%.c
	$(CC) $(CFLAGS) $(ARCH_OPTS) $< -c $(INCLUDES) -o $@

# Remove all files generated by compilation (executables included)
clean:
	$(DELETE_CMD) $(OBJ) $(EXE_1)$(EXTENSION) *.gch -f

# Remove all files generated by compilation (except executables)
clear:
	$(DELETE_CMD) $(OBJ) *.gch -f

run: $(EXE_1)$(EXTENSION)
	./$(EXE_1)$(EXTENSION)